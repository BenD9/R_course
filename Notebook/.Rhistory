knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = ".")
a = 2+2 # Result will be stored on variable a
mySum = 2+2
mySum <- 2+2 # Could put the operator with shortcut of alt + -
mySum
mySum1 <- mySum2 <- 6+4
myNumbers <- c(2, 4, 6, 8, 10, 12, 15, 57, 98)
myNumbers <- c(2, 4, 6, 8, 10, 12, 15, 57, 98)
myNumbers
myNumbers + 1
myNumbers / 2
myChars <- c("F", "M", "F", "M", "F", "F") # Character should be enclosed by quatation mark.
myChars
myChars + 1
myNumbers < 20
myLogical <- myNumbers < 20
myLogical
sum(myLogical)
sum(myLogical)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = ".")
library(tidyverse)
a = 2+2 # Result will be stored on variable a
mySum = 2+2 # recommend to give the name including information
mySum <- 2+2 # Could put the operator with shortcut of alt + -
mySum # Give back the stored value
mySum1 <- mySum2 <- 6+4 # This also works!
mySum1 <- 7+8 -> mySum2 # This format is not recommended
myNumbers <- c(2, 4, 6, 8, 10, 12, 15, 57, 98)
myNumbers
myNumbers + 1
myNumbers / 2
myChars <- c("F", "M", "F", "M", "F", "F")
myChars
myChars + 1
myChars + 1
myLogical <- myNumbers < 20
myLogical
sum(myLogical)
myFactor <- factor(myChars)
myFactor
sessionInfo()
sum(myNumbers)
mySum <- sum(myNumbers)
mySum
log10(myNumbers)
log10(x = myNumbers)
logb(myNumbers, 3)
logb(3, myNumbers)
logb(3, myNumbers)
mean(myNumbers)
mode(myNumbers)
length(myNumbers)
length(myNumbers)
myNumbers[1]
myNumbers[c(1, 3, 5)]
myNumbers[c(1, 3, 5)]
myNumbers[1:3]
myNumbers[, 3:1]
myNumbers[3:1]
myNumbers[length(myNumbers)]
myNumbers[length(myNumbers):1]
myNumbers[length(myNumbers):1]
myNumbers <- [c(T, T, T, T, T, F, F, F, F)]
myNumbers[c(T, T, T, T, T, F, F, F, F)]
myComparison <- myNumbers < 20
myComparison
myNumbers[myComparison]
myComparison2 <- (myNumbers < 10) | (myNumbers > 20)
myNumbers[myComparison2]
myNumbers[myComparison2]
myNumbers[myNumbers == 10]
myChars == "F"
myChars > "F"
!TRUE
!myComparison2
myNumbers[!myComparison2]
library(swirl) # Attach to the environment
