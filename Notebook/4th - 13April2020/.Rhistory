install.packages("swirl")
library("swirl")
swirl()
setwd("~/Desktop/R_course/Notebook/4th - 13April2020")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = ".")
getwd()
setwd("~/Desktop/R_course/Notebook/4th - 13April2020/")
list.files()
list.files()
?readRD
?readr
?readR
install.packages("readr)
install.packages("readr")
library(readr)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = ".")
library(dplyr)
library(readr)
library(readxl)
library(tibble)
library(tidyr)
library(stringr)
TwoDrugs <- read_csv("Session4 Files/ExperimentTwoDrugs.csv")
head(TwoDrugs)
TwoDrugs <- read_xls(path = "Session4 Files/ExperimentTwoDrugs.xls")
head(TwoDrugs)
Experiment <- read_xls(path = "Session4 Files/ExperimentWithFeatures.xls", sheet = 1)
Experiment2 <- read_xls(path = "Session4 Files/ExperimentWithFeatures.xls", sheet = 2)
View(TwoDrugs)
View(Experiment)
View(Experiment2)
View(Experiment2)
View(Experiment)
View(Experiment2)
Experiment2 <- read_xls(path = "Session4 Files/ExperimentWithFeatures.xls", sheet = "BadNaming")
# writexl is not currently on CRAN, so install it from GitHub
devtools::install_github("ropensci/writexl")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = ".")
Expe %>%
pivot_longer(cols = everything(), # take all the columns in the data
names_to = "Treatment",
values_to = "Cells") %>% # The values to get
Expe %>%
pivot_longer(cols = everything(), # take all the columns in the data
names_to = "Treatment",
values_to = "Cells") # The values to get
library(dplyr)
library(readr)
library(readxl)
library(tibble)
library(tidyr)
library(stringr)
Expe %>%
pivot_longer(cols = everything(), # take all the columns in the data
names_to = "Treatment",
values_to = "Cells") # The values to get
Expe <- read_xls(path = "Session4 Files/ExperimentTwoDrugs.xls")
glimpse(Expe)
Expe %>%
pivot_longer(cols = everything(), # take all the columns in the data
names_to = "Treatment",
values_to = "Cells") # The values to get
Expe %>%
pivot_longer(cols = everything(),
names_to = "Treatment",
values_to = "Cells",
values_drop_na = TRUE) # Filter out the missing values
Expe %>%
pivot_longer(cols = everything(),
names_to = "Treatment",
values_to = "Cells",
values_drop_na = TRUE) %>%
arrange(Treatment)
Expe %>%
pivot_longer(cols = everything(),
names_to = "Treatment",
values_to = "Cells",
values_drop_na = TRUE) %>%
arrange(Treatment) -> Expe.tidy
Expe.tidy
Expe %>%
pivot_longer(cols = -Drug1,
names_to = "Treatment",
values_to = "Cells",
values_drop_na = TRUE) %>%
arrange(Treatment)
Expe.tidy %>%
group_by(Treatment) %>%
summarise()
Expe.tidy %>%
group_by(Treatment) %>%
summarise(mean)
Expe.tidy %>%
group_by(Treatment) %>%
summarise(Mean.cells = mean)
Expe.tidy %>%
group_by(Treatment) %>%
summarise(Mean.cells = mean(cells))
Expe.tidy %>%
group_by(Treatment) %>%
summarise(Mean.cells = mean(Cells))
Expe.tidy %>%
group_by(Treatment) %>%
summarise(Mean.cells = sd(Cells))
Expe.tidy %>%
group_by(Treatment) %>%
summarise(Mean.cells = sd(Cells),
Number.Cells=n())
Expe.tidy %>%
group_by(Treatment) %>%
summarise(sd.cells = sd(Cells))
Expe.tidy %>%
group_by(Treatment) %>%
summarise(sd.cells = sd(Cells),
Number.Cells=n())
Expe.tidy %>%
group_by(Treatment) %>%
summarise(sd.cells = sd(Cells),
Number.Cells=n()) -> Expe.stats # return number of observations following the classification
Expe.stats
Expe.stats %>%
mutate(SEM.cells = SD.cells / Number.Cells) -> Expe.sem
Expe.stats %>%
mutate(SEM.cells = sd.cells / Number.Cells) -> Expe.sem
Expe.sem
mutate(SEM.cells = sd.cells / sqrt(Number.Cells) -> Expe.sem
Expe.stats %>%
Expe.stats %>%
mutate(SEM.cells = sd.cells / sqrt(Number.Cells)) -> Expe.sem
sem <- function(data, multiply=1){
sd.data <- sd(data) # calculate stdev
number.samples <- length(data)
sem.data <- sd.data/sqrt(number.samples)
return(sem.data)
}
sem(c(1:10))
sd(c(1:10)) / sqrt(10)
sem(c(1:10), multiply = 2) # Clatification of multiply == SEM * (multiply)
sem(c(1:10), multiply = 2) # Clatification of multiply == SEM * (multiply)
source("SEM.R")
sem(c(1:10), multiply = 2) # Clatification of multiply == SEM * (multiply)
return(sem.data * multiply)
source("SEM.R")
sem(c(1:10), multiply = 2) # Clatification of multiply == SEM * (multiply)
Expe.tidy %>% group_by(Treatment) %>%
summarise(SEM.cells = sem(Cells))
Expe.tidy %>% group_by(Treatment) %>%
summarise(Mean.cells = mean(Cells), SD.cells = sd(Cells)) %>%
mutate(CV.cells = Mean.cells / SD.cells)
Expe.tidy %>% group_by(Treatment) %>%
summarise(Mean.cells = mean(Cells), SD.cells = sd(Cells)) %>%
mutate(CV.cells = SD.cells / Mean.cells)
source("SEM.R")
Expe.tidy %>% group_by(Treatment) %>%
summarise(CV.cells = cv(Cells))
source("SEM.R")
Expe.tidy %>% group_by(Treatment) %>%
summarise(CV.cells = cv(Cells))
cv <- function(data){
sd.data <- sd(data)
mean.data <- mean(data())
cv.data <- sd.data / mean.data
return(cv.data)
}
Expe.tidy %>% group_by(Treatment) %>%
summarise(CV.cells = cv(Cells))
Expe.tidy %>% group_by(Treatment) %>% summarise(CV.cells = cv(Cells))
source("SEM.R")
Expe.tidy %>% group_by(Treatment) %>% summarise(CV.cells = cv(Cells))
Experiment <- read_xls("Session4 Files/ExperimentWithFeatures.xls", sheet=1)
glimpse(Experiment)
head(Experiment)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = ".")
install.packages(c("readr", "readxl")) # for reading files
install.packages(c("tibble", "tidyr")) # for changing to tidy data
install.packages("stringr") # for string manipulation
library(dplyr)
library(readr)
library(readxl)
library(tibble)
library(tidyr)
library(stringr)
getwd()
setwd("~/Desktop/R_course/Notebook/4th - 13April2020/")
list.files()
TwoDrugs <- read_csv("Session4 Files/ExperimentTwoDrugs.csv")
head(TwoDrugs)
TwoDrugs <- read_xls(path = "Session4 Files/ExperimentTwoDrugs.xls")
head(TwoDrugs)
Experiment <- read_xls(path = "Session4 Files/ExperimentWithFeatures.xls", sheet = 1)
Experiment2 <- read_xls(path = "Session4 Files/ExperimentWithFeatures.xls", sheet = 2)
Experiment2 <- read_xls(path = "Session4 Files/ExperimentWithFeatures.xls", sheet = "BadNaming")
write.table(Experiment, "experiment.csv",
quote=F, sep=",",
row.names = TRUE, col.names = TRUE)
rm()
Expe <- read_xls(path = "Session4 Files/ExperimentTwoDrugs.xls")
glimpse(Expe)
Expe %>%
pivot_longer(cols = everything(), # take all the columns in the data
names_to = "Treatment",
values_to = "Cells") # The values to get
Expe %>%
pivot_longer(cols = everything(),
names_to = "Treatment",
values_to = "Cells",
values_drop_na = TRUE) # Filter out the missing values
Expe %>%
pivot_longer(cols = everything(),
names_to = "Treatment",
values_to = "Cells",
values_drop_na = TRUE) %>%
arrange(Treatment) -> Expe.tidy
Expe.tidy
Expe %>%
pivot_longer(cols = -Drug1,
names_to = "Treatment",
values_to = "Cells",
values_drop_na = TRUE) %>%
arrange(Treatment)
Expe.tidy %>%
group_by(Treatment) %>%
summarise(Mean.cells = mean(Cells))
Expe.tidy %>%
group_by(Treatment) %>%
summarise(sd.cells = sd(Cells))
Expe.tidy %>%
group_by(Treatment) %>%
summarise(sd.cells = sd(Cells),
Number.Cells=n()) -> Expe.stats # return number of observations following the classification
Expe.stats
Expe.stats %>%
mutate(SEM.cells = sd.cells / sqrt(Number.Cells)) -> Expe.sem
Expe.sem
sem <- function(data, multiply=1){
sd.data <- sd(data) # calculate stdev
number.samples <- length(data)
sem.data <- sd.data/sqrt(number.samples)
return(sem.data * multiply)
}
source("SEM.R")
sem(c(1:10))
sd(c(1:10)) / sqrt(10)
sem(c(1:10), multiply = 2) # Clatification of multiply == SEM * (multiply)
Expe.tidy %>% group_by(Treatment) %>%
summarise(SEM.cells = sem(Cells))
Expe.tidy %>% group_by(Treatment) %>%
summarise(Mean.cells = mean(Cells), SD.cells = sd(Cells)) %>%
mutate(CV.cells = SD.cells / Mean.cells)
cv <- function(data){
sd.data <- sd(data)
mean.data <- mean(data())
cv.data <- sd.data / mean.data
return(cv.data)
}
source("SEM.R")
Expe.tidy %>% group_by(Treatment) %>% summarise(CV.cells = cv(Cells))
Experiment <- read_xls("Session4 Files/ExperimentWithFeatures.xls", sheet=1)
glimpse(Experiment)
head(Experiment)
install.packages(c("readr", "readxl"))
install.packages(c("tibble", "tidyr"))
library(dplyr)
library(readr)
library(readxl)
library(tibble)
library(tidyr)
library(stringr)
Experiment %>% pivot_longer(cols = -Day,
names_to = (".value")("Treatment"),
names_sep = "_")
Experiment %>% pivot_longer(cols = -Day,
names_to = c(".value", "Treatment"),
names_sep = "_")
Experiment %>%
pivot_longer(cols = -Day,
names_to = c(".value", "Treatment"),
names_sep = "_") %>%
drop_na() %>%
arrange(Treatment)
Experiment %>%
pivot_longer(cols = -Day,
names_to = c(".value", "Treatment"),
names_sep = "_") %>%
drop_na() %>%
arrange(Treatment)
Experiment2 <- read_xls("Session4 Files/ExperimentWithFeatures.xls", sheet=2)
Experiment2 <- rename(.data = Experiment2,
Cells.control = Control,
Age.control = Age...2,
Gender.control = Gender...3,
Cells.drug = Drug,
Age.drug = Age...5,
Gender.drug = Gender...6)
Experiment2
Experiment2 %>%
pivot_longer(cols = -Day,
names_to = c(".value","Treatment"),
names_sep=".")
Experiment2 %>%
pivot_longer(cols = -Day,
names_to = c(".value","Treatment"),
names_sep="_")
saveRDS(pbject = Experiment2, file = "Session4 Files/New_file_saveRDS.rds")
saveRDS(object = Experiment2, file = "Session4 Files/New_file_saveRDS.rds")
list.files()
Experiment2 %>%
pivot_longer(cols = -Day,
names_to = c(".value","Treatment"),
names_sep="_") %>% # names_sep does not work with ".".
drop_na()
Experiment2 %>%
pivot_longer(cols = -Day,
names_to = c(".value","Treatment"),
names_sep="_") # names_sep does not work with ".".
Exp.model <- aov(Cell ~ Treatment, data=Experiment)
Exp.model <- aov(cell ~ Treatment, data=Experiment)
Exp.model <- aov(Cells ~ Treatment, data=Experiment)
View(Experiment)
